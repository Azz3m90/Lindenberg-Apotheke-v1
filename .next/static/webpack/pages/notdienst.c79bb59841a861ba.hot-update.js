"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/notdienst",{

/***/ "./src/components/EmergencyPharmacyService.tsx":
/*!*****************************************************!*\
  !*** ./src/components/EmergencyPharmacyService.tsx ***!
  \*****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ EmergencyPharmacyService; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_dateUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/dateUtils */ \"./src/utils/dateUtils.ts\");\n/* harmony import */ var _utils_apiUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/apiUtils */ \"./src/utils/apiUtils.ts\");\n/* harmony import */ var _contexts_GlobalLoaderContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../contexts/GlobalLoaderContext */ \"./src/contexts/GlobalLoaderContext.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nfunction EmergencyPharmacyService(param) {\n    let { onDataLoaded } = param;\n    _s();\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [lastFetchTime, setLastFetchTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [usingFallbackData, setUsingFallbackData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { showLoader, hideLoader } = (0,_contexts_GlobalLoaderContext__WEBPACK_IMPORTED_MODULE_4__.useGlobalLoader)();\n    // Function to fetch emergency pharmacy data\n    const fetchEmergencyPharmacies = async ()=>{\n        try {\n            showLoader(\"Notdienst-Daten werden geladen...\");\n            // Get date range for API request (automatically handles dev/prod environments)\n            const { begin: beginParam, end: endParam } = (0,_utils_apiUtils__WEBPACK_IMPORTED_MODULE_3__.getApiDateRange)(14);\n            if ((0,_utils_apiUtils__WEBPACK_IMPORTED_MODULE_3__.isDevelopment)()) {\n                console.log(\"Running in development mode with test dates\");\n            } else {\n                console.log(\"Running in production mode with current dates\");\n            }\n            // API token\n            const token = \"0075e630f7ea1c1900a8bb186ccc7382b0f48608\";\n            console.log(\"Fetching emergency pharmacy data from \".concat(beginParam, \" to \").concat(endParam));\n            // Fetch data from API (removed number limit to get all available data)\n            const response = await fetch(\"https://www.lakt.de/api?begin=\".concat(beginParam, \"&end=\").concat(endParam, \"&token=\").concat(token));\n            if (!response.ok) {\n                throw new Error(\"API request failed with status \".concat(response.status));\n            }\n            const xmlText = await response.text();\n            const pharmacies = parseXmlResponse(xmlText);\n            // Update last fetch time and reset fallback flag\n            setLastFetchTime(new Date());\n            setUsingFallbackData(false);\n            // Pass data to parent component\n            onDataLoaded(pharmacies);\n        } catch (err) {\n            console.error(\"Error fetching emergency pharmacy data:\", err);\n            setError(err instanceof Error ? err.message : \"Unknown error occurred\");\n            // If API fails, use fallback data and set flag\n            setUsingFallbackData(true);\n            setLastFetchTime(new Date());\n            onDataLoaded(getFallbackData());\n        } finally{\n            hideLoader();\n        }\n    };\n    // Effect to fetch data on mount and set up refresh interval\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchEmergencyPharmacies();\n        // Set up automatic refresh every day\n        const refreshInterval = setInterval(()=>{\n            console.log(\"Auto-refreshing emergency pharmacy data\");\n            fetchEmergencyPharmacies();\n        }, 24 * 60 * 60 * 1000); // 24 hours in milliseconds\n        // Clean up interval on component unmount\n        return ()=>clearInterval(refreshInterval);\n    }, [\n        onDataLoaded\n    ]);\n    // If there's an error, render nothing - parent will use fallback data\n    if (error) {\n        return null;\n    }\n    // Component renders a small status indicator\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"text-xs text-gray-500 text-right mt-2\",\n        children: lastFetchTime && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    children: [\n                        \"Daten aktualisiert: \",\n                        (0,_utils_dateUtils__WEBPACK_IMPORTED_MODULE_2__.formatDate)(lastFetchTime),\n                        \" \",\n                        (0,_utils_dateUtils__WEBPACK_IMPORTED_MODULE_2__.formatTime)(lastFetchTime),\n                        (0,_utils_apiUtils__WEBPACK_IMPORTED_MODULE_3__.isDevelopment)() && \" (Testmodus)\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Projects\\\\Germany\\\\Lindenberg-Apotheke-v1\\\\src\\\\components\\\\EmergencyPharmacyService.tsx\",\n                    lineNumber: 108,\n                    columnNumber: 11\n                }, this),\n                usingFallbackData && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-orange-600 font-semibold mt-1\",\n                    children: \"⚠️ Aktuelle Daten konnten nicht abgerufen werden - Ersatzdaten werden angezeigt\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Projects\\\\Germany\\\\Lindenberg-Apotheke-v1\\\\src\\\\components\\\\EmergencyPharmacyService.tsx\",\n                    lineNumber: 114,\n                    columnNumber: 13\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Projects\\\\Germany\\\\Lindenberg-Apotheke-v1\\\\src\\\\components\\\\EmergencyPharmacyService.tsx\",\n            lineNumber: 107,\n            columnNumber: 9\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Projects\\\\Germany\\\\Lindenberg-Apotheke-v1\\\\src\\\\components\\\\EmergencyPharmacyService.tsx\",\n        lineNumber: 105,\n        columnNumber: 5\n    }, this);\n}\n_s(EmergencyPharmacyService, \"GPxKBl8Sm+ZP0ifekqyYTxo+OZg=\", false, function() {\n    return [\n        _contexts_GlobalLoaderContext__WEBPACK_IMPORTED_MODULE_4__.useGlobalLoader\n    ];\n});\n_c = EmergencyPharmacyService;\n// Helper functions moved to apiUtils.ts\n// Parse XML response from API\nfunction parseXmlResponse(xmlText) {\n    // Check if we're in a browser environment\n    if (false) {}\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlText, \"text/xml\");\n    const events = xmlDoc.getElementsByTagName(\"VEVENT\");\n    const pharmacies = [];\n    const now = new Date();\n    for(let i = 0; i < events.length; i++){\n        const event = events[i];\n        // Extract data from XML\n        const id = getElementText(event, \"FID\") || \"temp-\".concat(i);\n        const name = getElementText(event, \"NAME\") || \"Unbekannte Apotheke\";\n        const street = getElementText(event, \"STREET\") || \"\";\n        const zip = getElementText(event, \"ZIP\") || \"\";\n        const city = getElementText(event, \"CITY\") || \"\";\n        const phone = getElementText(event, \"PHONE\") || \"\";\n        const lat = getElementText(event, \"LAT\") || \"\";\n        const lng = getElementText(event, \"LNG\") || \"\";\n        // Parse dates\n        const startTimeStr = getElementText(event, \"DTSTART\") || \"\";\n        const endTimeStr = getElementText(event, \"DTEND\") || \"\";\n        const startTime = startTimeStr ? new Date(startTimeStr) : new Date();\n        const endTime = endTimeStr ? new Date(endTimeStr) : new Date();\n        // Format address\n        const address = \"\".concat(street, \", \").concat(zip, \" \").concat(city);\n        // Determine if this is the current emergency service\n        const isCurrent = now >= startTime && now < endTime;\n        pharmacies.push({\n            id,\n            name,\n            address,\n            phone,\n            date: (0,_utils_dateUtils__WEBPACK_IMPORTED_MODULE_2__.formatDate)(startTime),\n            timeStart: (0,_utils_dateUtils__WEBPACK_IMPORTED_MODULE_2__.formatTime)(startTime),\n            timeEnd: (0,_utils_dateUtils__WEBPACK_IMPORTED_MODULE_2__.formatTime)(endTime),\n            status: isCurrent ? \"current\" : \"upcoming\",\n            lat,\n            lng,\n            // Distance will be calculated later if needed\n            distance: \"Entfernung berechnen...\"\n        });\n    }\n    // Sort by date and time\n    pharmacies.sort((a, b)=>{\n        // Current services first\n        if (a.status === \"current\" && b.status !== \"current\") return -1;\n        if (a.status !== \"current\" && b.status === \"current\") return 1;\n        // Then by date\n        const dateA = new Date(a.date.split(\".\").reverse().join(\"-\"));\n        const dateB = new Date(b.date.split(\".\").reverse().join(\"-\"));\n        return dateA.getTime() - dateB.getTime();\n    });\n    return pharmacies;\n}\n// Helper function to get text content of an XML element\nfunction getElementText(parent, tagName) {\n    const element = parent.getElementsByTagName(tagName)[0];\n    return element ? element.textContent || \"\" : \"\";\n}\n// Fallback data in case API fails\nfunction getFallbackData() {\n    const today = new Date();\n    const tomorrow = new Date();\n    tomorrow.setDate(today.getDate() + 1);\n    const dayAfterTomorrow = new Date();\n    dayAfterTomorrow.setDate(today.getDate() + 2);\n    return [];\n}\nvar _c;\n$RefreshReg$(_c, \"EmergencyPharmacyService\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/EmergencyPharmacyService.tsx\n"));

/***/ }),

/***/ "./src/contexts/GlobalLoaderContext.tsx":
/*!**********************************************!*\
  !*** ./src/contexts/GlobalLoaderContext.tsx ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalLoaderProvider: function() { return /* binding */ GlobalLoaderProvider; },\n/* harmony export */   useGlobalLoader: function() { return /* binding */ useGlobalLoader; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst GlobalLoaderContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction useGlobalLoader() {\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(GlobalLoaderContext);\n    if (context === undefined) {\n        throw new Error(\"useGlobalLoader must be used within a GlobalLoaderProvider\");\n    }\n    return context;\n}\n_s(useGlobalLoader, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction GlobalLoaderProvider(param) {\n    let { children } = param;\n    _s1();\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [loadingText, setLoadingText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const showLoader = (text)=>{\n        setLoadingText(text);\n        setIsLoading(true);\n    };\n    const hideLoader = ()=>{\n        setIsLoading(false);\n        // Clear text after a delay to prevent flashing\n        setTimeout(()=>setLoadingText(undefined), 200);\n    };\n    const updateLoadingText = (text)=>{\n        setLoadingText(text);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GlobalLoaderContext.Provider, {\n        value: {\n            isLoading,\n            loadingText,\n            showLoader,\n            hideLoader,\n            setLoadingText: updateLoadingText\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Projects\\\\Germany\\\\Lindenberg-Apotheke-v1\\\\src\\\\contexts\\\\GlobalLoaderContext.tsx\",\n        lineNumber: 49,\n        columnNumber: 5\n    }, this);\n}\n_s1(GlobalLoaderProvider, \"w9lDPO7uPNkXM7xusQMvlPcPfAc=\");\n_c = GlobalLoaderProvider;\nvar _c;\n$RefreshReg$(_c, \"GlobalLoaderProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGV4dHMvR2xvYmFsTG9hZGVyQ29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBdUU7QUFVdkUsTUFBTUcsb0NBQXNCSCxvREFBYUEsQ0FDdkNJO0FBR0ssU0FBU0M7O0lBQ2QsTUFBTUMsVUFBVUwsaURBQVVBLENBQUNFO0lBQzNCLElBQUlHLFlBQVlGLFdBQVc7UUFDekIsTUFBTSxJQUFJRyxNQUNSO0lBRUo7SUFDQSxPQUFPRDtBQUNUO0dBUmdCRDtBQWNULFNBQVNHLHFCQUFxQixLQUF1QztRQUF2QyxFQUFFQyxRQUFRLEVBQTZCLEdBQXZDOztJQUNuQyxNQUFNLENBQUNDLFdBQVdDLGFBQWEsR0FBR1QsK0NBQVFBLENBQUM7SUFDM0MsTUFBTSxDQUFDVSxhQUFhQyxlQUFlLEdBQUdYLCtDQUFRQTtJQUU5QyxNQUFNWSxhQUFhLENBQUNDO1FBQ2xCRixlQUFlRTtRQUNmSixhQUFhO0lBQ2Y7SUFFQSxNQUFNSyxhQUFhO1FBQ2pCTCxhQUFhO1FBQ2IsK0NBQStDO1FBQy9DTSxXQUFXLElBQU1KLGVBQWVULFlBQVk7SUFDOUM7SUFFQSxNQUFNYyxvQkFBb0IsQ0FBQ0g7UUFDekJGLGVBQWVFO0lBQ2pCO0lBRUEscUJBQ0UsOERBQUNaLG9CQUFvQmdCLFFBQVE7UUFDM0JDLE9BQU87WUFDTFY7WUFDQUU7WUFDQUU7WUFDQUU7WUFDQUgsZ0JBQWdCSztRQUNsQjtrQkFFQ1Q7Ozs7OztBQUdQO0lBaENnQkQ7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbnRleHRzL0dsb2JhbExvYWRlckNvbnRleHQudHN4P2QwYmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIFJlYWN0Tm9kZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5cclxuaW50ZXJmYWNlIEdsb2JhbExvYWRlckNvbnRleHRUeXBlIHtcclxuICBpc0xvYWRpbmc6IGJvb2xlYW47XHJcbiAgbG9hZGluZ1RleHQ/OiBzdHJpbmc7XHJcbiAgc2hvd0xvYWRlcjogKHRleHQ/OiBzdHJpbmcpID0+IHZvaWQ7XHJcbiAgaGlkZUxvYWRlcjogKCkgPT4gdm9pZDtcclxuICBzZXRMb2FkaW5nVGV4dDogKHRleHQ6IHN0cmluZykgPT4gdm9pZDtcclxufVxyXG5cclxuY29uc3QgR2xvYmFsTG9hZGVyQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8R2xvYmFsTG9hZGVyQ29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KFxyXG4gIHVuZGVmaW5lZFxyXG4pO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUdsb2JhbExvYWRlcigpIHtcclxuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChHbG9iYWxMb2FkZXJDb250ZXh0KTtcclxuICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgIFwidXNlR2xvYmFsTG9hZGVyIG11c3QgYmUgdXNlZCB3aXRoaW4gYSBHbG9iYWxMb2FkZXJQcm92aWRlclwiXHJcbiAgICApO1xyXG4gIH1cclxuICByZXR1cm4gY29udGV4dDtcclxufVxyXG5cclxuaW50ZXJmYWNlIEdsb2JhbExvYWRlclByb3ZpZGVyUHJvcHMge1xyXG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBHbG9iYWxMb2FkZXJQcm92aWRlcih7IGNoaWxkcmVuIH06IEdsb2JhbExvYWRlclByb3ZpZGVyUHJvcHMpIHtcclxuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtsb2FkaW5nVGV4dCwgc2V0TG9hZGluZ1RleHRdID0gdXNlU3RhdGU8c3RyaW5nIHwgdW5kZWZpbmVkPigpO1xyXG5cclxuICBjb25zdCBzaG93TG9hZGVyID0gKHRleHQ/OiBzdHJpbmcpID0+IHtcclxuICAgIHNldExvYWRpbmdUZXh0KHRleHQpO1xyXG4gICAgc2V0SXNMb2FkaW5nKHRydWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGhpZGVMb2FkZXIgPSAoKSA9PiB7XHJcbiAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xyXG4gICAgLy8gQ2xlYXIgdGV4dCBhZnRlciBhIGRlbGF5IHRvIHByZXZlbnQgZmxhc2hpbmdcclxuICAgIHNldFRpbWVvdXQoKCkgPT4gc2V0TG9hZGluZ1RleHQodW5kZWZpbmVkKSwgMjAwKTtcclxuICB9O1xyXG5cclxuICBjb25zdCB1cGRhdGVMb2FkaW5nVGV4dCA9ICh0ZXh0OiBzdHJpbmcpID0+IHtcclxuICAgIHNldExvYWRpbmdUZXh0KHRleHQpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8R2xvYmFsTG9hZGVyQ29udGV4dC5Qcm92aWRlclxyXG4gICAgICB2YWx1ZT17e1xyXG4gICAgICAgIGlzTG9hZGluZyxcclxuICAgICAgICBsb2FkaW5nVGV4dCxcclxuICAgICAgICBzaG93TG9hZGVyLFxyXG4gICAgICAgIGhpZGVMb2FkZXIsXHJcbiAgICAgICAgc2V0TG9hZGluZ1RleHQ6IHVwZGF0ZUxvYWRpbmdUZXh0LFxyXG4gICAgICB9fVxyXG4gICAgPlxyXG4gICAgICB7Y2hpbGRyZW59XHJcbiAgICA8L0dsb2JhbExvYWRlckNvbnRleHQuUHJvdmlkZXI+XHJcbiAgKTtcclxufVxyXG4iXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsIkdsb2JhbExvYWRlckNvbnRleHQiLCJ1bmRlZmluZWQiLCJ1c2VHbG9iYWxMb2FkZXIiLCJjb250ZXh0IiwiRXJyb3IiLCJHbG9iYWxMb2FkZXJQcm92aWRlciIsImNoaWxkcmVuIiwiaXNMb2FkaW5nIiwic2V0SXNMb2FkaW5nIiwibG9hZGluZ1RleHQiLCJzZXRMb2FkaW5nVGV4dCIsInNob3dMb2FkZXIiLCJ0ZXh0IiwiaGlkZUxvYWRlciIsInNldFRpbWVvdXQiLCJ1cGRhdGVMb2FkaW5nVGV4dCIsIlByb3ZpZGVyIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/contexts/GlobalLoaderContext.tsx\n"));

/***/ })

});